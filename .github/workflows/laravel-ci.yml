name: Laravel CI/CD to Bluehost (actions-totan-in)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1Ô∏è‚É£ Checkout code
      - name: Checkout Code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, pdo_mysql
          coverage: none

      # 3Ô∏è‚É£ Install Composer dependencies
      - name: Install Composer Dependencies
        run: composer install --no-dev --optimize-autoloader --no-interaction --prefer-dist

      # 4Ô∏è‚É£ Copy .env if not exists
      - name: Copy .env.example to .env
        run: |
          if [ ! -f .env ]; then
            cp .env.example .env
          else
            echo ".env already exists, skipping copy"
          fi

      # 5Ô∏è‚É£ Generate Laravel app key
      - name: Generate Application Key
        run: php artisan key:generate

      # 6Ô∏è‚É£ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      # 7Ô∏è‚É£ Install Node.js dependencies
      - name: Install Node.js Dependencies
        run: |
          if [ -f package.json ]; then
            if [ -f package-lock.json ]; then
              npm ci --no-audit --no-fund
            else
              npm install --no-audit --no-fund
            fi
          else
            echo "package.json not found ‚Äî skipping npm install"
          fi
        env:
          CI: true


      # 8Ô∏è‚É£ Build front-end assets
      - name: Build Project
        run: |
          if [ -f package.json ] && grep -q "\"build\"" package.json; then
            npm run build --if-present
          else
            echo "No build script found in package.json ‚Äî skipping build"
        env:
          CI: true

      # 9Ô∏è‚É£ Run Laravel unit tests
      - name: Run Unit Tests
        run: php artisan test

      # üîü Deploy via FTP to Bluehost
      - name: Deploy to Bluehost via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: ${{ secrets.FTP_PORT }}
          protocol: ftp
          local-dir: ./               # vendor folder included
          server-dir: ./
          exclude: |
            **/.git*
            **/.github*
            **/node_modules/**
            **/tests/**
            **/.env
            **/README.md
