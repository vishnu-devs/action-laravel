name: Laravel CI/CD to Bluehost (actions-totan-in)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - dev

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout code
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, pdo_mysql
          coverage: none

      - name: Cache Composer Dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer Dependencies
        run: composer install --no-progress --prefer-dist --no-interaction

      - name: Copy .env.example to .env
        run: |
          if [ ! -f .env ]; then
            cp .env.example .env
          else
            echo ".env already exists, skipping copy"
          fi

      - name: Generate Application Key
        run: php artisan key:generate

      # Set up Node before running npm commands (prevents inconsistent npm/node versions)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'      # Use a stable LTS version (change to 16 or 20 if your project requires)
          cache: 'npm'

      - name: Install Node.js Dependencies (if package.json exists)
        run: |
          if [ -f package.json ]; then
            # Use npm ci for consistent installs (requires package-lock.json)
            if [ -f package-lock.json ]; then
              npm ci --no-audit --no-fund
            else
              npm install --no-audit --no-fund
            fi
          else
            echo "package.json not found — skipping npm install"
          fi
        env:
          CI: true

      - name: Build Project (if 'build' script exists)
        run: |
          if [ -f package.json ] && grep -q "\"build\"" package.json; then
            npm run build --if-present
          else
            echo "No build script found in package.json — skipping build"
          fi
        env:
          CI: true

      - name: Run Unit Tests
        run: php artisan test
 

      # 2️⃣ Deploy via FTP to Bluehost
      - name: Deploy to Bluehost via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: ${{ secrets.FTP_PORT }}
          protocol: ftp
          local-dir: ./
          server-dir: ./
          exclude: |
            **/.git*
            **/.github*
            **/node_modules/**
            **/tests/**
            **/.env